library(ggmap)
register_google("AIzaSyBk2NSduWGCf1jZAqxpzFPy39Dpyb-2uEc")
ggmap_rast = function(map)
{
outputs = list(); map_bbox = attr(map,"bb")
extent_map = extent(as.numeric(map_bbox[c(2,4,1,3)]))
my_map = raster(extent_map, nrow=nrow(map), ncol=ncol(map), crs=CRS("+init=epsg:4326"))
rgb_cols = setNames(as.data.frame(t(col2rgb(map))), c("red","green","blue"))
red = my_map; values(red) = rgb_cols[["red"]]
green = my_map; values(green) = rgb_cols[["green"]]
blue = my_map; values(blue) = rgb_cols[["blue"]]
vals = my_map; val1 = 1; val2 = length(values(vals))
values(vals) = seq(val1,val2,1)-1
cols = rgb(red[], green[], blue[], maxColorValue=255)
cols[(length(cols)-50*dim(map)[1]):length(cols)] = "white" # removes "Google"
outputs[[1]] = vals; outputs[[2]] = cols; return(outputs)
}
map1 = ggmap::get_map(c(left=2.5,bottom=50.5,right=4.5,top=51.5), source="google", maptype="terrain")
map2 = ggmap_rast(map1); plot(map2[[1]], col=map2[[2]], legend=F, axes=F, box=F) # ggmap(map1)+labs(x ="",y="")
library(raster)
map2 = ggmap_rast(map1); plot(map2[[1]], col=map2[[2]], legend=F, axes=F, box=F) # ggmap(map1)+labs(x ="",y="")
map1 = ggmap::get_map(c(left=2.5,bottom=50.5,right=4.5,top=51.5), source="google", maptype="terrain")
ggmap(map1)+labs(x ="",y="")
setwd("~/Downloads/SARAH/rasters")
library(raster)
plot(raster("A65_nightlights/Harmonized_DN_NTL_2015161718_average_simVIIRS_clip.tif"))
plot(raster("A65_nightlights/Harmonized_DN_NTL_2015161718_average_simVIIRS_clip.tif"))
plot(raster("A65_nightlights/Harmonized_DN_NTL_2015161718_average_simVIIRS_clip.tif"))
par(oma=c(0,0,0,0), mar=c(0,0,0,0))
plot(raster("A65_nightlights/Harmonized_DN_NTL_2015161718_average_simVIIRS_clip.tif"))
plot(raster("A66_proportion_rural/GHS_rural_clip.tif"))
plot(raster("A66_proportion_rural/GHS_rural_clip_pop.tif"))
raster("A66_proportion_rural/GHS_rural_clip_pop.tif")
plot(raster("C1_Windspeed/C1_Mean_Windspeed.tif"))
plot(raster("P55_LAI/MOD15A2_M_LAI_2014-10-01_rgb_3600x1800.TIFF"))
setwd("~/Dropbox/Temp_MacP/NCOV/Spatial/Analyses_of_2Â°_wave/CDS_Copernicus_data")
library(ncdf4)
library(raster)
plot(brick("CDS_Copernicus_0320.nc"))
